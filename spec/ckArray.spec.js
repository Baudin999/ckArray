// Generated by CoffeeScript 1.9.1
(function() {
  describe('A test suite for the CkArray class', function() {
    var a;
    a = void 0;
    it('should be able to be required', function() {
      var CkArray;
      CkArray = require('./../src/CkArray');
      expect(CkArray).not.toBeNull();
      return expect(CkArray).not.toBeUndefined();
    });
    it('should be able to create an Array which acts like an Array', function() {
      var CkArray;
      CkArray = require('./../src/CkArray');
      a = new CkArray();
      expect(a).not.toBeNull();
      return expect(a).not.toBeUndefined();
    });
    it('should have a length property', function() {
      expect(a.length).toBeDefined();
      return expect(a.length).toEqual(0);
    });
    it('should have a push function which pushes an item onto the array and increments the length property by one', function() {
      expect(a.push).toBeDefined('CkArray does not have a push method');
      expect(typeof a.push).toEqual('function', 'The push method on the CkArray is not a function');
      return expect(a.push(12)).toEqual(1);
    });
    return it('should be able to observe changes and handle push messages', function() {
      var postItem, preItem;
      expect(a.observe).toBeDefined('CkArray does not have a pushObserve member');
      expect(typeof a.observe).toEqual('function', 'The pushObserve member of CkArray is not a function');
      preItem = void 0;
      postItem = void 0;
      a.observe({
        prePush: function(item) {
          return preItem = item;
        },
        postPush: function(item) {
          return postItem = item;
        }
      });
      a.push(13);
      expect(preItem).toEqual(13);
      return expect(postItem).toEqual(13);
    });
  });

}).call(this);

//# sourceMappingURL=ckArray.spec.js.map
